

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Jan 04 01:17:27 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 23/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4321 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000000                     nvmcon          equ	0
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000F80                     PORTA           equ	3968	;# 
    93   000F81                     PORTB           equ	3969	;# 
    94   000F82                     PORTC           equ	3970	;# 
    95   000F83                     PORTD           equ	3971	;# 
    96   000F84                     PORTE           equ	3972	;# 
    97   000F89                     LATA            equ	3977	;# 
    98   000F8A                     LATB            equ	3978	;# 
    99   000F8B                     LATC            equ	3979	;# 
   100   000F8C                     LATD            equ	3980	;# 
   101   000F8D                     LATE            equ	3981	;# 
   102   000F92                     TRISA           equ	3986	;# 
   103   000F92                     DDRA            equ	3986	;# 
   104   000F93                     TRISB           equ	3987	;# 
   105   000F93                     DDRB            equ	3987	;# 
   106   000F94                     TRISC           equ	3988	;# 
   107   000F94                     DDRC            equ	3988	;# 
   108   000F95                     TRISD           equ	3989	;# 
   109   000F95                     DDRD            equ	3989	;# 
   110   000F96                     TRISE           equ	3990	;# 
   111   000F96                     DDRE            equ	3990	;# 
   112   000F9B                     OSCTUNE         equ	3995	;# 
   113   000F9D                     PIE1            equ	3997	;# 
   114   000F9E                     PIR1            equ	3998	;# 
   115   000F9F                     IPR1            equ	3999	;# 
   116   000FA0                     PIE2            equ	4000	;# 
   117   000FA1                     PIR2            equ	4001	;# 
   118   000FA2                     IPR2            equ	4002	;# 
   119   000FA6                     EECON1          equ	4006	;# 
   120   000FA7                     EECON2          equ	4007	;# 
   121   000FA8                     EEDATA          equ	4008	;# 
   122   000FA9                     EEADR           equ	4009	;# 
   123   000FAB                     RCSTA           equ	4011	;# 
   124   000FAB                     RCSTA1          equ	4011	;# 
   125   000FAC                     TXSTA           equ	4012	;# 
   126   000FAC                     TXSTA1          equ	4012	;# 
   127   000FAD                     TXREG           equ	4013	;# 
   128   000FAD                     TXREG1          equ	4013	;# 
   129   000FAE                     RCREG           equ	4014	;# 
   130   000FAE                     RCREG1          equ	4014	;# 
   131   000FAF                     SPBRG           equ	4015	;# 
   132   000FAF                     SPBRG1          equ	4015	;# 
   133   000FB0                     SPBRGH          equ	4016	;# 
   134   000FB1                     T3CON           equ	4017	;# 
   135   000FB2                     TMR3            equ	4018	;# 
   136   000FB2                     TMR3L           equ	4018	;# 
   137   000FB3                     TMR3H           equ	4019	;# 
   138   000FB4                     CMCON           equ	4020	;# 
   139   000FB5                     CVRCON          equ	4021	;# 
   140   000FB6                     ECCP1AS         equ	4022	;# 
   141   000FB7                     ECCP1DEL        equ	4023	;# 
   142   000FB7                     PWM1CON         equ	4023	;# 
   143   000FB8                     BAUDCON         equ	4024	;# 
   144   000FB8                     BAUDCTL         equ	4024	;# 
   145   000FBA                     CCP2CON         equ	4026	;# 
   146   000FBB                     CCPR2           equ	4027	;# 
   147   000FBB                     CCPR2L          equ	4027	;# 
   148   000FBC                     CCPR2H          equ	4028	;# 
   149   000FBD                     CCP1CON         equ	4029	;# 
   150   000FBD                     ECCP1CON        equ	4029	;# 
   151   000FBE                     CCPR1           equ	4030	;# 
   152   000FBE                     CCPR1L          equ	4030	;# 
   153   000FBF                     CCPR1H          equ	4031	;# 
   154   000FC0                     ADCON2          equ	4032	;# 
   155   000FC1                     ADCON1          equ	4033	;# 
   156   000FC2                     ADCON0          equ	4034	;# 
   157   000FC3                     ADRES           equ	4035	;# 
   158   000FC3                     ADRESL          equ	4035	;# 
   159   000FC4                     ADRESH          equ	4036	;# 
   160   000FC5                     SSPCON2         equ	4037	;# 
   161   000FC6                     SSPCON1         equ	4038	;# 
   162   000FC7                     SSPSTAT         equ	4039	;# 
   163   000FC8                     SSPADD          equ	4040	;# 
   164   000FC9                     SSPBUF          equ	4041	;# 
   165   000FCA                     T2CON           equ	4042	;# 
   166   000FCB                     PR2             equ	4043	;# 
   167   000FCB                     MEMCON          equ	4043	;# 
   168   000FCC                     TMR2            equ	4044	;# 
   169   000FCD                     T1CON           equ	4045	;# 
   170   000FCE                     TMR1            equ	4046	;# 
   171   000FCE                     TMR1L           equ	4046	;# 
   172   000FCF                     TMR1H           equ	4047	;# 
   173   000FD0                     RCON            equ	4048	;# 
   174   000FD1                     WDTCON          equ	4049	;# 
   175   000FD2                     HLVDCON         equ	4050	;# 
   176   000FD2                     LVDCON          equ	4050	;# 
   177   000FD3                     OSCCON          equ	4051	;# 
   178   000FD5                     T0CON           equ	4053	;# 
   179   000FD6                     TMR0            equ	4054	;# 
   180   000FD6                     TMR0L           equ	4054	;# 
   181   000FD7                     TMR0H           equ	4055	;# 
   182   000FD8                     STATUS          equ	4056	;# 
   183   000FD9                     FSR2            equ	4057	;# 
   184   000FD9                     FSR2L           equ	4057	;# 
   185   000FDA                     FSR2H           equ	4058	;# 
   186   000FDB                     PLUSW2          equ	4059	;# 
   187   000FDC                     PREINC2         equ	4060	;# 
   188   000FDD                     POSTDEC2        equ	4061	;# 
   189   000FDE                     POSTINC2        equ	4062	;# 
   190   000FDF                     INDF2           equ	4063	;# 
   191   000FE0                     BSR             equ	4064	;# 
   192   000FE1                     FSR1            equ	4065	;# 
   193   000FE1                     FSR1L           equ	4065	;# 
   194   000FE2                     FSR1H           equ	4066	;# 
   195   000FE3                     PLUSW1          equ	4067	;# 
   196   000FE4                     PREINC1         equ	4068	;# 
   197   000FE5                     POSTDEC1        equ	4069	;# 
   198   000FE6                     POSTINC1        equ	4070	;# 
   199   000FE7                     INDF1           equ	4071	;# 
   200   000FE8                     WREG            equ	4072	;# 
   201   000FE9                     FSR0            equ	4073	;# 
   202   000FE9                     FSR0L           equ	4073	;# 
   203   000FEA                     FSR0H           equ	4074	;# 
   204   000FEB                     PLUSW0          equ	4075	;# 
   205   000FEC                     PREINC0         equ	4076	;# 
   206   000FED                     POSTDEC0        equ	4077	;# 
   207   000FEE                     POSTINC0        equ	4078	;# 
   208   000FEF                     INDF0           equ	4079	;# 
   209   000FF0                     INTCON3         equ	4080	;# 
   210   000FF1                     INTCON2         equ	4081	;# 
   211   000FF2                     INTCON          equ	4082	;# 
   212   000FF3                     PROD            equ	4083	;# 
   213   000FF3                     PRODL           equ	4083	;# 
   214   000FF4                     PRODH           equ	4084	;# 
   215   000FF5                     TABLAT          equ	4085	;# 
   216   000FF6                     TBLPTR          equ	4086	;# 
   217   000FF6                     TBLPTRL         equ	4086	;# 
   218   000FF7                     TBLPTRH         equ	4087	;# 
   219   000FF8                     TBLPTRU         equ	4088	;# 
   220   000FF9                     PCLAT           equ	4089	;# 
   221   000FF9                     PC              equ	4089	;# 
   222   000FF9                     PCL             equ	4089	;# 
   223   000FFA                     PCLATH          equ	4090	;# 
   224   000FFB                     PCLATU          equ	4091	;# 
   225   000FFC                     STKPTR          equ	4092	;# 
   226   000FFD                     TOS             equ	4093	;# 
   227   000FFD                     TOSL            equ	4093	;# 
   228   000FFE                     TOSH            equ	4094	;# 
   229   000FFF                     TOSU            equ	4095	;# 
   230   000F94                     _TRISCbits      set	3988
   231   000FD3                     _OSCCONbits     set	4051
   232   000FAE                     _RCREG          set	4014
   233   000F9E                     _PIR1bits       set	3998
   234   000FAD                     _TXREG          set	4013
   235   000FAB                     _RCSTAbits      set	4011
   236   000FAC                     _TXSTAbits      set	4012
   237   000FAF                     _SPBRG          set	4015
   238                           
   239                           	psect	smallconst
   240   000200                     __psmallconst:
   241                           	callstack 0
   242   000200  00                 	db	0
   243   000201                     STR_1:
   244   000201  55                 	db	85	;'U'
   245   000202  41                 	db	65	;'A'
   246   000203  52                 	db	82	;'R'
   247   000204  54                 	db	84	;'T'
   248   000205  20                 	db	32
   249   000206  49                 	db	73	;'I'
   250   000207  6E                 	db	110	;'n'
   251   000208  69                 	db	105	;'i'
   252   000209  74                 	db	116	;'t'
   253   00020A  69                 	db	105	;'i'
   254   00020B  61                 	db	97	;'a'
   255   00020C  6C                 	db	108	;'l'
   256   00020D  69                 	db	105	;'i'
   257   00020E  7A                 	db	122	;'z'
   258   00020F  65                 	db	101	;'e'
   259   000210  64                 	db	100	;'d'
   260   000211  0D                 	db	13
   261   000212  0A                 	db	10
   262   000213  00                 	db	0
   263   000214                     STR_2:
   264   000214  48                 	db	72	;'H'
   265   000215  65                 	db	101	;'e'
   266   000216  6C                 	db	108	;'l'
   267   000217  6C                 	db	108	;'l'
   268   000218  6F                 	db	111	;'o'
   269   000219  20                 	db	32
   270   00021A  77                 	db	119	;'w'
   271   00021B  6F                 	db	111	;'o'
   272   00021C  72                 	db	114	;'r'
   273   00021D  6C                 	db	108	;'l'
   274   00021E  64                 	db	100	;'d'
   275   00021F  0D                 	db	13
   276   000220  0A                 	db	10
   277   000221  00                 	db	0
   278   000222  00                 	db	0	; dummy byte at the end
   279   000001                     __activetblptr  equ	1
   280                           
   281                           ; #config settings
   282                           
   283                           	psect	cinit
   284   000392                     __pcinit:
   285                           	callstack 0
   286   000392                     start_initialization:
   287                           	callstack 0
   288   000392                     __initialization:
   289                           	callstack 0
   290   000392                     end_of_initialization:
   291                           	callstack 0
   292   000392                     __end_of__initialization:
   293                           	callstack 0
   294   000392  0E00               	movlw	low (__Lsmallconst shr (0+16))
   295   000394  6EF8               	movwf	tblptru,c
   296   000396  0E02               	movlw	high __Lsmallconst
   297   000398  6EF7               	movwf	tblptrh,c
   298   00039A  0100               	movlb	0
   299   00039C  EF90  F001         	goto	_main	;jump to C main() function
   300                           
   301                           	psect	cstackCOMRAM
   302   000001                     __pcstackCOMRAM:
   303                           	callstack 0
   304   000001                     ?___lldiv:
   305                           	callstack 0
   306   000001                     UART_Write@data:
   307                           	callstack 0
   308   000001                     ___lldiv@dividend:
   309                           	callstack 0
   310   000001                     
   311                           ; 1 bytes @ 0x0
   312   000001                     	ds	1
   313   000002                     UART_Write_String@text:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x1
   317   000002                     	ds	1
   318   000003                     
   319                           ; 1 bytes @ 0x2
   320   000003                     	ds	2
   321   000005                     ___lldiv@divisor:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0x4
   325   000005                     	ds	4
   326   000009                     ___lldiv@quotient:
   327                           	callstack 0
   328   000009                     
   329                           ; 1 bytes @ 0x8
   330   000009                     	ds	4
   331   00000D                     ___lldiv@counter:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xC
   335   00000D                     	ds	1
   336   00000E                     UART_Init@baud_rate:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0xD
   340   00000E                     	ds	4
   341   000012                     ??_UART_Init:
   342                           
   343                           ; 1 bytes @ 0x11
   344   000012                     	ds	4
   345   000016                     
   346                           ; 1 bytes @ 0x15
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 42 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1
   366 ;;      Params:         0       0       0
   367 ;;      Locals:         0       0       0
   368 ;;      Temps:          0       0       0
   369 ;;      Totals:         0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels required when called: 2
   372 ;; This function calls:
   373 ;;		_UART_Init
   374 ;;		_UART_Write_String
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text0
   381   000320                     __ptext0:
   382                           	callstack 0
   383   000320                     _main:
   384                           	callstack 29
   385   000320                     
   386                           ;main.c: 44:     OSCCONbits.IRCF = 0b111;
   387   000320  0E70               	movlw	112
   388   000322  12D3               	iorwf	211,f,c	;volatile
   389   000324                     
   390                           ;main.c: 45:     UART_Init(9600);
   391   000324  0E80               	movlw	128
   392   000326  6E0E               	movwf	UART_Init@baud_rate^0,c
   393   000328  0E25               	movlw	37
   394   00032A  6E0F               	movwf	(UART_Init@baud_rate+1)^0,c
   395   00032C  0E00               	movlw	0
   396   00032E  6E10               	movwf	(UART_Init@baud_rate+2)^0,c
   397   000330  0E00               	movlw	0
   398   000332  6E11               	movwf	(UART_Init@baud_rate+3)^0,c
   399   000334  EC64  F001         	call	_UART_Init	;wreg free
   400   000338                     
   401                           ;main.c: 47:     UART_Write_String("UART Initialized\r\n");
   402   000338  0E01               	movlw	low STR_1
   403   00033A  6E02               	movwf	UART_Write_String@text^0,c
   404   00033C  ECA8  F001         	call	_UART_Write_String	;wreg free
   405   000340                     l837:
   406                           
   407                           ;main.c: 50:     {;main.c: 53:         UART_Write_String("Hello world\r\n");
   408   000340  0E14               	movlw	low STR_2
   409   000342  6E02               	movwf	UART_Write_String@text^0,c
   410   000344  ECA8  F001         	call	_UART_Write_String	;wreg free
   411   000348  EFA0  F001         	goto	l837
   412   00034C  EF01  F000         	goto	start
   413   000350                     __end_of_main:
   414                           	callstack 0
   415                           
   416 ;; *************** function _UART_Write_String *****************
   417 ;; Defined at:
   418 ;;		line 29 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  text            1    1[COMRAM] PTR const unsigned char 
   421 ;;		 -> STR_2(14), STR_1(19), 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1
   433 ;;      Params:         1       0       0
   434 ;;      Locals:         0       0       0
   435 ;;      Temps:          0       0       0
   436 ;;      Totals:         1       0       0
   437 ;;Total ram usage:        1 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; Hardware stack levels required when called: 1
   440 ;; This function calls:
   441 ;;		_UART_Write
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text1
   448   000350                     __ptext1:
   449                           	callstack 0
   450   000350                     _UART_Write_String:
   451                           	callstack 29
   452   000350                     
   453                           ;main.c: 30:     while (*text) {
   454   000350  EFB1  F001         	goto	l829
   455   000354                     l825:
   456                           
   457                           ;main.c: 31:         UART_Write(*text++);
   458   000354  C002  FFF6         	movff	UART_Write_String@text,tblptrl
   459   000358                     	if	0	;There is only one active tblptr byte
   460   000358                     	endif
   461   000358                     	if	0	;tblptru may be non-zero
   462   000358                     	endif
   463   000358                     	if	0	;tblptru may be non-zero
   464   000358                     	endif
   465   000358  0008               	tblrd		*
   466   00035A  50F5               	movf	tablat,w,c
   467   00035C  ECBE  F001         	call	_UART_Write
   468   000360  2A02               	incf	UART_Write_String@text^0,f,c
   469   000362                     l829:
   470                           
   471                           ;main.c: 30:     while (*text) {
   472   000362  C002  FFF6         	movff	UART_Write_String@text,tblptrl
   473   000366                     	if	0	;There is only one active tblptr byte
   474   000366                     	endif
   475   000366                     	if	0	;tblptru may be non-zero
   476   000366                     	endif
   477   000366                     	if	0	;tblptru may be non-zero
   478   000366                     	endif
   479   000366  0008               	tblrd		*
   480   000368  50F5               	movf	tablat,w,c
   481   00036A  0900               	iorlw	0
   482   00036C  A4D8               	btfss	status,2,c
   483   00036E  EFBB  F001         	goto	u121
   484   000372  EFBD  F001         	goto	u120
   485   000376                     u121:
   486   000376  EFAA  F001         	goto	l825
   487   00037A                     u120:
   488   00037A  0012               	return		;funcret
   489   00037C                     __end_of_UART_Write_String:
   490                           	callstack 0
   491                           
   492 ;; *************** function _UART_Write *****************
   493 ;; Defined at:
   494 ;;		line 23 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  data            1    wreg     unsigned char 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  data            1    0[COMRAM] unsigned char 
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1
   508 ;;      Params:         0       0       0
   509 ;;      Locals:         1       0       0
   510 ;;      Temps:          0       0       0
   511 ;;      Totals:         1       0       0
   512 ;;Total ram usage:        1 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_UART_Write_String
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text2
   522   00037C                     __ptext2:
   523                           	callstack 0
   524   00037C                     _UART_Write:
   525                           	callstack 29
   526                           
   527                           ;incstack = 0
   528                           ;UART_Write@data stored from wreg
   529   00037C  6E01               	movwf	UART_Write@data^0,c
   530   00037E                     l22:
   531   00037E  A2AC               	btfss	172,1,c	;volatile
   532   000380  EFC4  F001         	goto	u11
   533   000384  EFC6  F001         	goto	u10
   534   000388                     u11:
   535   000388  EFBF  F001         	goto	l22
   536   00038C                     u10:
   537   00038C                     
   538                           ;main.c: 25:     TXREG = data;
   539   00038C  C001  FFAD         	movff	UART_Write@data,4013	;volatile
   540   000390  0012               	return		;funcret
   541   000392                     __end_of_UART_Write:
   542                           	callstack 0
   543                           
   544 ;; *************** function _UART_Init *****************
   545 ;; Defined at:
   546 ;;		line 7 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  baud_rate       4   13[COMRAM] unsigned long 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  baud_val        2    0        unsigned int 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1
   560 ;;      Params:         4       0       0
   561 ;;      Locals:         0       0       0
   562 ;;      Temps:          4       0       0
   563 ;;      Totals:         8       0       0
   564 ;;Total ram usage:        8 bytes
   565 ;; Hardware stack levels used: 1
   566 ;; Hardware stack levels required when called: 1
   567 ;; This function calls:
   568 ;;		___lldiv
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text3
   575   0002C8                     __ptext3:
   576                           	callstack 0
   577   0002C8                     _UART_Init:
   578                           	callstack 29
   579   0002C8  0E00               	movlw	0
   580   0002CA  6E01               	movwf	___lldiv@dividend^0,c
   581   0002CC  0E12               	movlw	18
   582   0002CE  6E02               	movwf	(___lldiv@dividend+1)^0,c
   583   0002D0  0E7A               	movlw	122
   584   0002D2  6E03               	movwf	(___lldiv@dividend+2)^0,c
   585   0002D4  0E00               	movlw	0
   586   0002D6  6E04               	movwf	(___lldiv@dividend+3)^0,c
   587   0002D8  C00E  F012         	movff	UART_Init@baud_rate,??_UART_Init
   588   0002DC  C00F  F013         	movff	UART_Init@baud_rate+1,??_UART_Init+1
   589   0002E0  C010  F014         	movff	UART_Init@baud_rate+2,??_UART_Init+2
   590   0002E4  C011  F015         	movff	UART_Init@baud_rate+3,??_UART_Init+3
   591   0002E8  0E06               	movlw	6
   592   0002EA                     u115:
   593   0002EA  90D8               	bcf	status,0,c
   594   0002EC  3612               	rlcf	??_UART_Init^0,f,c
   595   0002EE  3613               	rlcf	(??_UART_Init+1)^0,f,c
   596   0002F0  3614               	rlcf	(??_UART_Init+2)^0,f,c
   597   0002F2  3615               	rlcf	(??_UART_Init+3)^0,f,c
   598   0002F4  2EE8               	decfsz	wreg,f,c
   599   0002F6  EF75  F001         	goto	u115
   600   0002FA  C012  F005         	movff	??_UART_Init,___lldiv@divisor
   601   0002FE  C013  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   602   000302  C014  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
   603   000306  C015  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
   604   00030A  EC12  F001         	call	___lldiv	;wreg free
   605   00030E                     
   606                           ;main.c: 9:     SPBRG = 12;
   607   00030E  0E0C               	movlw	12
   608   000310  6EAF               	movwf	175,c	;volatile
   609   000312                     
   610                           ;main.c: 10:     TXSTAbits.BRGH = 1;
   611   000312  84AC               	bsf	172,2,c	;volatile
   612   000314                     
   613                           ;main.c: 13:     TRISCbits.TRISC6 = 0;
   614   000314  9C94               	bcf	148,6,c	;volatile
   615   000316                     
   616                           ;main.c: 14:     TRISCbits.TRISC7 = 1;
   617   000316  8E94               	bsf	148,7,c	;volatile
   618   000318                     
   619                           ;main.c: 17:     RCSTAbits.SPEN = 1;
   620   000318  8EAB               	bsf	171,7,c	;volatile
   621   00031A                     
   622                           ;main.c: 18:     TXSTAbits.TXEN = 1;
   623   00031A  8AAC               	bsf	172,5,c	;volatile
   624   00031C                     
   625                           ;main.c: 19:     RCSTAbits.CREN = 1;
   626   00031C  88AB               	bsf	171,4,c	;volatile
   627   00031E  0012               	return		;funcret
   628   000320                     __end_of_UART_Init:
   629                           	callstack 0
   630                           
   631 ;; *************** function ___lldiv *****************
   632 ;; Defined at:
   633 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  dividend        4    0[COMRAM] unsigned long 
   636 ;;  divisor         4    4[COMRAM] unsigned long 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  quotient        4    8[COMRAM] unsigned long 
   639 ;;  counter         1   12[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  4    0[COMRAM] unsigned long 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1
   649 ;;      Params:         8       0       0
   650 ;;      Locals:         5       0       0
   651 ;;      Temps:          0       0       0
   652 ;;      Totals:        13       0       0
   653 ;;Total ram usage:       13 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		_UART_Init
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           	psect	text4
   663   000224                     __ptext4:
   664                           	callstack 0
   665   000224                     ___lldiv:
   666                           	callstack 29
   667   000224  0E00               	movlw	0
   668   000226  6E09               	movwf	___lldiv@quotient^0,c
   669   000228  0E00               	movlw	0
   670   00022A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   671   00022C  0E00               	movlw	0
   672   00022E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   673   000230  0E00               	movlw	0
   674   000232  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   675   000234  5005               	movf	___lldiv@divisor^0,w,c
   676   000236  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   677   000238  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   678   00023A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   679   00023C  B4D8               	btfsc	status,2,c
   680   00023E  EF23  F001         	goto	u81
   681   000242  EF25  F001         	goto	u80
   682   000246                     u81:
   683   000246  EF5B  F001         	goto	l75
   684   00024A                     u80:
   685   00024A  0E01               	movlw	1
   686   00024C  6E0D               	movwf	___lldiv@counter^0,c
   687   00024E  EF2F  F001         	goto	l793
   688   000252                     l791:
   689   000252  90D8               	bcf	status,0,c
   690   000254  3605               	rlcf	___lldiv@divisor^0,f,c
   691   000256  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   692   000258  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   693   00025A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   694   00025C  2A0D               	incf	___lldiv@counter^0,f,c
   695   00025E                     l793:
   696   00025E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   697   000260  EF34  F001         	goto	u91
   698   000264  EF36  F001         	goto	u90
   699   000268                     u91:
   700   000268  EF29  F001         	goto	l791
   701   00026C                     u90:
   702   00026C                     l795:
   703   00026C  90D8               	bcf	status,0,c
   704   00026E  3609               	rlcf	___lldiv@quotient^0,f,c
   705   000270  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   706   000272  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   707   000274  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   708   000276  5005               	movf	___lldiv@divisor^0,w,c
   709   000278  5C01               	subwf	___lldiv@dividend^0,w,c
   710   00027A  5006               	movf	(___lldiv@divisor+1)^0,w,c
   711   00027C  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   712   00027E  5007               	movf	(___lldiv@divisor+2)^0,w,c
   713   000280  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   714   000282  5008               	movf	(___lldiv@divisor+3)^0,w,c
   715   000284  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   716   000286  A0D8               	btfss	status,0,c
   717   000288  EF48  F001         	goto	u101
   718   00028C  EF4A  F001         	goto	u100
   719   000290                     u101:
   720   000290  EF53  F001         	goto	l803
   721   000294                     u100:
   722   000294  5005               	movf	___lldiv@divisor^0,w,c
   723   000296  5E01               	subwf	___lldiv@dividend^0,f,c
   724   000298  5006               	movf	(___lldiv@divisor+1)^0,w,c
   725   00029A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   726   00029C  5007               	movf	(___lldiv@divisor+2)^0,w,c
   727   00029E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   728   0002A0  5008               	movf	(___lldiv@divisor+3)^0,w,c
   729   0002A2  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   730   0002A4  8009               	bsf	___lldiv@quotient^0,0,c
   731   0002A6                     l803:
   732   0002A6  90D8               	bcf	status,0,c
   733   0002A8  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   734   0002AA  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   735   0002AC  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   736   0002AE  3205               	rrcf	___lldiv@divisor^0,f,c
   737   0002B0  2E0D               	decfsz	___lldiv@counter^0,f,c
   738   0002B2  EF36  F001         	goto	l795
   739   0002B6                     l75:
   740   0002B6  C009  F001         	movff	___lldiv@quotient,?___lldiv
   741   0002BA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   742   0002BE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   743   0002C2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   744   0002C6  0012               	return		;funcret
   745   0002C8                     __end_of___lldiv:
   746                           	callstack 0
   747                           
   748                           	psect	rparam
   749   000001                     ___rparam_used  equ	1
   750   000000                     ___param_bank   equ	0
   751   000000                     __Lparam        equ	__Lrparam
   752   000000                     __Hparam        equ	__Hrparam
   753                           
   754                           	psect	config
   755                           
   756                           ; Padding undefined space
   757   300000                     	org	3145728
   758   300000  FF                 	db	255
   759                           
   760                           ;Config register CONFIG1H @ 0x300001
   761                           ;	Oscillator
   762                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
   763                           ;	Fail-Safe Clock Monitor Enable bit
   764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   765                           ;	Internal/External Oscillator Switchover bit
   766                           ;	IESO = OFF, Oscillator Switchover mode disabled
   767   300001                     	org	3145729
   768   300001  08                 	db	8
   769                           
   770                           ;Config register CONFIG2L @ 0x300002
   771                           ;	Power-up Timer Enable bit
   772                           ;	PWRT = OFF, PWRT disabled
   773                           ;	Brown-out Reset Enable bits
   774                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   775                           ;	Brown-out Reset Voltage bits
   776                           ;	BORV = 3, Minimum Setting
   777   300002                     	org	3145730
   778   300002  19                 	db	25
   779                           
   780                           ;Config register CONFIG2H @ 0x300003
   781                           ;	Watchdog Timer Enable bit
   782                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   783                           ;	Watchdog Timer Postscale Select bits
   784                           ;	WDTPS = 32768, 1:32768
   785   300003                     	org	3145731
   786   300003  1E                 	db	30
   787                           
   788                           ; Padding undefined space
   789   300004                     	org	3145732
   790   300004  FF                 	db	255
   791                           
   792                           ;Config register CONFIG3H @ 0x300005
   793                           ;	CCP2 MUX bit
   794                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   795                           ;	PORTB A/D Enable bit
   796                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
   797                           ;	Low-Power Timer1 Oscillator Enable bit
   798                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   799                           ;	MCLR Pin Enable bit
   800                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   801   300005                     	org	3145733
   802   300005  83                 	db	131
   803                           
   804                           ;Config register CONFIG4L @ 0x300006
   805                           ;	Stack Full/Underflow Reset Enable bit
   806                           ;	STVREN = ON, Stack full/underflow will cause Reset
   807                           ;	Single-Supply ICSP Enable bit
   808                           ;	LVP = ON, Single-Supply ICSP enabled
   809                           ;	Boot Block Size Select bits
   810                           ;	BBSIZ = BB256, 256 Word
   811                           ;	Extended Instruction Set Enable bit
   812                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   813                           ;	Background Debugger Enable bit
   814                           ;	DEBUG = 0x1, unprogrammed default
   815   300006                     	org	3145734
   816   300006  85                 	db	133
   817                           
   818                           ; Padding undefined space
   819   300007                     	org	3145735
   820   300007  FF                 	db	255
   821                           
   822                           ;Config register CONFIG5L @ 0x300008
   823                           ;	Code Protection bit
   824                           ;	CP0 = OFF, Block 0 not code-protected
   825                           ;	Code Protection bit
   826                           ;	CP1 = OFF, Block 1 not code-protected
   827   300008                     	org	3145736
   828   300008  03                 	db	3
   829                           
   830                           ;Config register CONFIG5H @ 0x300009
   831                           ;	Boot Block Code Protection bitProtect Boot
   832                           ;	CPB = OFF, Boot block not code-protected
   833                           ;	Data EEPROM Code Protection bit
   834                           ;	CPD = OFF, Data EEPROM not code-protected
   835   300009                     	org	3145737
   836   300009  C0                 	db	192
   837                           
   838                           ;Config register CONFIG6L @ 0x30000A
   839                           ;	Write Protection bit
   840                           ;	WRT0 = OFF, Block 0 not write-protected
   841                           ;	Write Protection bit
   842                           ;	WRT1 = OFF, Block 1 not write-protected
   843   30000A                     	org	3145738
   844   30000A  03                 	db	3
   845                           
   846                           ;Config register CONFIG6H @ 0x30000B
   847                           ;	Configuration Register Write Protection bit
   848                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   849                           ;	Boot Block Write Protection bit
   850                           ;	WRTB = OFF, Boot block not write-protected
   851                           ;	Data EEPROM Write Protection bit
   852                           ;	WRTD = OFF, Data EEPROM not write-protected
   853   30000B                     	org	3145739
   854   30000B  E0                 	db	224
   855                           
   856                           ;Config register CONFIG7L @ 0x30000C
   857                           ;	Table Read Protection bit
   858                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
   859                           ;	Table Read Protection bit
   860                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
   861   30000C                     	org	3145740
   862   30000C  03                 	db	3
   863                           
   864                           ;Config register CONFIG7H @ 0x30000D
   865                           ;	Boot Block Table Read Protection bit
   866                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
   867   30000D                     	org	3145741
   868   30000D  40                 	db	64
   869                           tosu	equ	0xFFF
   870                           tosh	equ	0xFFE
   871                           tosl	equ	0xFFD
   872                           stkptr	equ	0xFFC
   873                           pclatu	equ	0xFFB
   874                           pclath	equ	0xFFA
   875                           pcl	equ	0xFF9
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           prodh	equ	0xFF4
   881                           prodl	equ	0xFF3
   882                           indf0	equ	0xFEF
   883                           postinc0	equ	0xFEE
   884                           postdec0	equ	0xFED
   885                           preinc0	equ	0xFEC
   886                           plusw0	equ	0xFEB
   887                           fsr0h	equ	0xFEA
   888                           fsr0l	equ	0xFE9
   889                           wreg	equ	0xFE8
   890                           indf1	equ	0xFE7
   891                           postinc1	equ	0xFE6
   892                           postdec1	equ	0xFE5
   893                           preinc1	equ	0xFE4
   894                           plusw1	equ	0xFE3
   895                           fsr1h	equ	0xFE2
   896                           fsr1l	equ	0xFE1
   897                           bsr	equ	0xFE0
   898                           indf2	equ	0xFDF
   899                           postinc2	equ	0xFDE
   900                           postdec2	equ	0xFDD
   901                           preinc2	equ	0xFDC
   902                           plusw2	equ	0xFDB
   903                           fsr2h	equ	0xFDA
   904                           fsr2l	equ	0xFD9
   905                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      21
    BANK0           128      0       0
    BANK1           239      0       0

Pointer List with Targets:

    UART_Write_String@text	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), STR_2(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Write_String->_UART_Write
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     250
                          _UART_Init
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    1     0      1      62
                                              1 COMRAM     1     0      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     188
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _UART_Write_String
     _UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          127      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           239      0       0      0.0%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRl          20      0       0      0.0%
BITBIGSFR_1llh      12      0       0      0.0%
BITBIGSFR_5         12      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_1lll       1      0       0      0.0%
BITBIGSFR_1lh        1      0       0      0.0%
COMRAM             127     21      21     16.5%
BANK0              128      0       0      0.0%
BANK1              239      0       0      0.0%
BIGRAM             494      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      21      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Jan 04 01:17:27 2025

                       l22 037E                         l31 037A                         l25 0390  
                       l19 031E                         l82 02C6                         l75 02B6  
                       u10 038C                         u11 0388                         u80 024A  
                       u81 0246                         u90 026C                         u91 0268  
                      l801 02A4                        l721 037E                        l803 02A6  
                      l811 0312                        l723 038C                        l805 02B0  
                      l821 031C                        l813 0314                        l815 0316  
                      l807 02C8                        l823 0350                        l831 0320  
                      l817 0318                        l809 030E                        l825 0354  
                      l833 0324                        l819 031A                        l827 0360  
                      l835 0338                        l829 0362                        l837 0340  
                      l791 0252                        l793 025E                        l785 0224  
                      l795 026C                        l787 0234                        l797 0276  
                      l789 024A                        l799 0294                        u100 0294  
                      u101 0290                        u120 037A                        u121 0376  
                      u115 02EA                        wreg 0FE8                       STR_1 0201  
                     STR_2 0214                       _main 0320                       start 0002  
             ___param_bank 0000                      ?_main 0001            __end_of___lldiv 02C8  
                    _RCREG 0FAE                      _SPBRG 0FAF                      _TXREG 0FAD  
              ?_UART_Write 0001                      tablat 0FF5                      status 0FD8  
          __initialization 0392               __end_of_main 0350                     ??_main 0016  
            __activetblptr 0001          __end_of_UART_Init 0320                  ??___lldiv 0009  
                   isa$std 0001               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8                 __accesstop 0080  
  __end_of__initialization 0392              ___rparam_used 0001             __pcstackCOMRAM 0001  
             ??_UART_Write 0001                    __Hparam 0000                    __Lparam 0000  
                  ___lldiv 0224         __end_of_UART_Write 0392               __psmallconst 0200  
                  __pcinit 0392                    __ramtop 0200                    __ptext0 0320  
                  __ptext1 0350                    __ptext2 037C                    __ptext3 02C8  
                  __ptext4 0224       end_of_initialization 0392            ___lldiv@divisor 0005  
          ___lldiv@counter 000D                  _RCSTAbits 0FAB                  _UART_Init 02C8  
           UART_Write@data 0001         UART_Init@baud_rate 000E                  _TRISCbits 0F94  
    UART_Write_String@text 0002                  _TXSTAbits 0FAC                 ?_UART_Init 000E  
      start_initialization 0392                   ?___lldiv 0001                ??_UART_Init 0012  
              __smallconst 0200                   _PIR1bits 0F9E                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0200          _UART_Write_String 0350  
       ?_UART_Write_String 0002        ??_UART_Write_String 0003                   isa$xinst 0000  
__end_of_UART_Write_String 037C           ___lldiv@dividend 0001                 _OSCCONbits 0FD3  
         ___lldiv@quotient 0009                 _UART_Write 037C  
