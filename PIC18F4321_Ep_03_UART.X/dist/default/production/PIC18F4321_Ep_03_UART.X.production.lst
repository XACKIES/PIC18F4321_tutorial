

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Jan 04 13:19:41 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 23/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4321 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000000                     nvmcon          equ	0
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000F80                     PORTA           equ	3968	;# 
    93   000F81                     PORTB           equ	3969	;# 
    94   000F82                     PORTC           equ	3970	;# 
    95   000F83                     PORTD           equ	3971	;# 
    96   000F84                     PORTE           equ	3972	;# 
    97   000F89                     LATA            equ	3977	;# 
    98   000F8A                     LATB            equ	3978	;# 
    99   000F8B                     LATC            equ	3979	;# 
   100   000F8C                     LATD            equ	3980	;# 
   101   000F8D                     LATE            equ	3981	;# 
   102   000F92                     TRISA           equ	3986	;# 
   103   000F92                     DDRA            equ	3986	;# 
   104   000F93                     TRISB           equ	3987	;# 
   105   000F93                     DDRB            equ	3987	;# 
   106   000F94                     TRISC           equ	3988	;# 
   107   000F94                     DDRC            equ	3988	;# 
   108   000F95                     TRISD           equ	3989	;# 
   109   000F95                     DDRD            equ	3989	;# 
   110   000F96                     TRISE           equ	3990	;# 
   111   000F96                     DDRE            equ	3990	;# 
   112   000F9B                     OSCTUNE         equ	3995	;# 
   113   000F9D                     PIE1            equ	3997	;# 
   114   000F9E                     PIR1            equ	3998	;# 
   115   000F9F                     IPR1            equ	3999	;# 
   116   000FA0                     PIE2            equ	4000	;# 
   117   000FA1                     PIR2            equ	4001	;# 
   118   000FA2                     IPR2            equ	4002	;# 
   119   000FA6                     EECON1          equ	4006	;# 
   120   000FA7                     EECON2          equ	4007	;# 
   121   000FA8                     EEDATA          equ	4008	;# 
   122   000FA9                     EEADR           equ	4009	;# 
   123   000FAB                     RCSTA           equ	4011	;# 
   124   000FAB                     RCSTA1          equ	4011	;# 
   125   000FAC                     TXSTA           equ	4012	;# 
   126   000FAC                     TXSTA1          equ	4012	;# 
   127   000FAD                     TXREG           equ	4013	;# 
   128   000FAD                     TXREG1          equ	4013	;# 
   129   000FAE                     RCREG           equ	4014	;# 
   130   000FAE                     RCREG1          equ	4014	;# 
   131   000FAF                     SPBRG           equ	4015	;# 
   132   000FAF                     SPBRG1          equ	4015	;# 
   133   000FB0                     SPBRGH          equ	4016	;# 
   134   000FB1                     T3CON           equ	4017	;# 
   135   000FB2                     TMR3            equ	4018	;# 
   136   000FB2                     TMR3L           equ	4018	;# 
   137   000FB3                     TMR3H           equ	4019	;# 
   138   000FB4                     CMCON           equ	4020	;# 
   139   000FB5                     CVRCON          equ	4021	;# 
   140   000FB6                     ECCP1AS         equ	4022	;# 
   141   000FB7                     ECCP1DEL        equ	4023	;# 
   142   000FB7                     PWM1CON         equ	4023	;# 
   143   000FB8                     BAUDCON         equ	4024	;# 
   144   000FB8                     BAUDCTL         equ	4024	;# 
   145   000FBA                     CCP2CON         equ	4026	;# 
   146   000FBB                     CCPR2           equ	4027	;# 
   147   000FBB                     CCPR2L          equ	4027	;# 
   148   000FBC                     CCPR2H          equ	4028	;# 
   149   000FBD                     CCP1CON         equ	4029	;# 
   150   000FBD                     ECCP1CON        equ	4029	;# 
   151   000FBE                     CCPR1           equ	4030	;# 
   152   000FBE                     CCPR1L          equ	4030	;# 
   153   000FBF                     CCPR1H          equ	4031	;# 
   154   000FC0                     ADCON2          equ	4032	;# 
   155   000FC1                     ADCON1          equ	4033	;# 
   156   000FC2                     ADCON0          equ	4034	;# 
   157   000FC3                     ADRES           equ	4035	;# 
   158   000FC3                     ADRESL          equ	4035	;# 
   159   000FC4                     ADRESH          equ	4036	;# 
   160   000FC5                     SSPCON2         equ	4037	;# 
   161   000FC6                     SSPCON1         equ	4038	;# 
   162   000FC7                     SSPSTAT         equ	4039	;# 
   163   000FC8                     SSPADD          equ	4040	;# 
   164   000FC9                     SSPBUF          equ	4041	;# 
   165   000FCA                     T2CON           equ	4042	;# 
   166   000FCB                     PR2             equ	4043	;# 
   167   000FCB                     MEMCON          equ	4043	;# 
   168   000FCC                     TMR2            equ	4044	;# 
   169   000FCD                     T1CON           equ	4045	;# 
   170   000FCE                     TMR1            equ	4046	;# 
   171   000FCE                     TMR1L           equ	4046	;# 
   172   000FCF                     TMR1H           equ	4047	;# 
   173   000FD0                     RCON            equ	4048	;# 
   174   000FD1                     WDTCON          equ	4049	;# 
   175   000FD2                     HLVDCON         equ	4050	;# 
   176   000FD2                     LVDCON          equ	4050	;# 
   177   000FD3                     OSCCON          equ	4051	;# 
   178   000FD5                     T0CON           equ	4053	;# 
   179   000FD6                     TMR0            equ	4054	;# 
   180   000FD6                     TMR0L           equ	4054	;# 
   181   000FD7                     TMR0H           equ	4055	;# 
   182   000FD8                     STATUS          equ	4056	;# 
   183   000FD9                     FSR2            equ	4057	;# 
   184   000FD9                     FSR2L           equ	4057	;# 
   185   000FDA                     FSR2H           equ	4058	;# 
   186   000FDB                     PLUSW2          equ	4059	;# 
   187   000FDC                     PREINC2         equ	4060	;# 
   188   000FDD                     POSTDEC2        equ	4061	;# 
   189   000FDE                     POSTINC2        equ	4062	;# 
   190   000FDF                     INDF2           equ	4063	;# 
   191   000FE0                     BSR             equ	4064	;# 
   192   000FE1                     FSR1            equ	4065	;# 
   193   000FE1                     FSR1L           equ	4065	;# 
   194   000FE2                     FSR1H           equ	4066	;# 
   195   000FE3                     PLUSW1          equ	4067	;# 
   196   000FE4                     PREINC1         equ	4068	;# 
   197   000FE5                     POSTDEC1        equ	4069	;# 
   198   000FE6                     POSTINC1        equ	4070	;# 
   199   000FE7                     INDF1           equ	4071	;# 
   200   000FE8                     WREG            equ	4072	;# 
   201   000FE9                     FSR0            equ	4073	;# 
   202   000FE9                     FSR0L           equ	4073	;# 
   203   000FEA                     FSR0H           equ	4074	;# 
   204   000FEB                     PLUSW0          equ	4075	;# 
   205   000FEC                     PREINC0         equ	4076	;# 
   206   000FED                     POSTDEC0        equ	4077	;# 
   207   000FEE                     POSTINC0        equ	4078	;# 
   208   000FEF                     INDF0           equ	4079	;# 
   209   000FF0                     INTCON3         equ	4080	;# 
   210   000FF1                     INTCON2         equ	4081	;# 
   211   000FF2                     INTCON          equ	4082	;# 
   212   000FF3                     PROD            equ	4083	;# 
   213   000FF3                     PRODL           equ	4083	;# 
   214   000FF4                     PRODH           equ	4084	;# 
   215   000FF5                     TABLAT          equ	4085	;# 
   216   000FF6                     TBLPTR          equ	4086	;# 
   217   000FF6                     TBLPTRL         equ	4086	;# 
   218   000FF7                     TBLPTRH         equ	4087	;# 
   219   000FF8                     TBLPTRU         equ	4088	;# 
   220   000FF9                     PCLAT           equ	4089	;# 
   221   000FF9                     PC              equ	4089	;# 
   222   000FF9                     PCL             equ	4089	;# 
   223   000FFA                     PCLATH          equ	4090	;# 
   224   000FFB                     PCLATU          equ	4091	;# 
   225   000FFC                     STKPTR          equ	4092	;# 
   226   000FFD                     TOS             equ	4093	;# 
   227   000FFD                     TOSL            equ	4093	;# 
   228   000FFE                     TOSH            equ	4094	;# 
   229   000FFF                     TOSU            equ	4095	;# 
   230   000FD3                     _OSCCONbits     set	4051
   231   000FAE                     _RCREG          set	4014
   232   000F9E                     _PIR1bits       set	3998
   233   000FAD                     _TXREG          set	4013
   234   000FAB                     _RCSTAbits      set	4011
   235   000F94                     _TRISCbits      set	3988
   236   000FAC                     _TXSTAbits      set	4012
   237   000FAF                     _SPBRG          set	4015
   238                           
   239                           	psect	smallconst
   240   000200                     __psmallconst:
   241                           	callstack 0
   242   000200  00                 	db	0
   243   000201                     STR_1:
   244   000201  55                 	db	85	;'U'
   245   000202  41                 	db	65	;'A'
   246   000203  52                 	db	82	;'R'
   247   000204  54                 	db	84	;'T'
   248   000205  20                 	db	32
   249   000206  49                 	db	73	;'I'
   250   000207  6E                 	db	110	;'n'
   251   000208  69                 	db	105	;'i'
   252   000209  74                 	db	116	;'t'
   253   00020A  69                 	db	105	;'i'
   254   00020B  61                 	db	97	;'a'
   255   00020C  6C                 	db	108	;'l'
   256   00020D  69                 	db	105	;'i'
   257   00020E  7A                 	db	122	;'z'
   258   00020F  65                 	db	101	;'e'
   259   000210  64                 	db	100	;'d'
   260   000211  0D                 	db	13
   261   000212  0A                 	db	10
   262   000213  00                 	db	0
   263   000214                     STR_2:
   264   000214  72                 	db	114	;'r'
   265   000215  65                 	db	101	;'e'
   266   000216  63                 	db	99	;'c'
   267   000217  65                 	db	101	;'e'
   268   000218  69                 	db	105	;'i'
   269   000219  76                 	db	118	;'v'
   270   00021A  65                 	db	101	;'e'
   271   00021B  64                 	db	100	;'d'
   272   00021C  20                 	db	32
   273   00021D  3A                 	db	58	;':'
   274   00021E  20                 	db	32
   275   00021F  20                 	db	32
   276   000220  00                 	db	0
   277   000211                     STR_3           equ	STR_1+16
   278   000221  00                 	db	0	; dummy byte at the end
   279   000001                     __activetblptr  equ	1
   280                           
   281                           ; #config settings
   282                           
   283                           	psect	cinit
   284   0002DC                     __pcinit:
   285                           	callstack 0
   286   0002DC                     start_initialization:
   287                           	callstack 0
   288   0002DC                     __initialization:
   289                           	callstack 0
   290   0002DC                     end_of_initialization:
   291                           	callstack 0
   292   0002DC                     __end_of__initialization:
   293                           	callstack 0
   294   0002DC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   295   0002DE  6EF8               	movwf	tblptru,c
   296   0002E0  0E02               	movlw	high __Lsmallconst
   297   0002E2  6EF7               	movwf	tblptrh,c
   298   0002E4  0100               	movlb	0
   299   0002E6  EF11  F001         	goto	_main	;jump to C main() function
   300                           
   301                           	psect	cstackCOMRAM
   302   000001                     __pcstackCOMRAM:
   303                           	callstack 0
   304   000001                     UART_Write@data:
   305                           	callstack 0
   306   000001                     UART_Init@baud_rate:
   307                           	callstack 0
   308   000001                     
   309                           ; 1 bytes @ 0x0
   310   000001                     	ds	1
   311   000002                     UART_Write_String@text:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x1
   315   000002                     	ds	1
   316   000003                     
   317                           ; 1 bytes @ 0x2
   318   000003                     	ds	2
   319   000005                     main@received_char:
   320                           	callstack 0
   321   000005                     
   322                           ; 1 bytes @ 0x4
   323   000005                     	ds	1
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 37 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  received_cha    1    4[COMRAM] unsigned char 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1
   344 ;;      Params:         0       0       0
   345 ;;      Locals:         1       0       0
   346 ;;      Temps:          0       0       0
   347 ;;      Totals:         1       0       0
   348 ;;Total ram usage:        1 bytes
   349 ;; Hardware stack levels required when called: 2
   350 ;; This function calls:
   351 ;;		_UART_Init
   352 ;;		_UART_Read
   353 ;;		_UART_Write
   354 ;;		_UART_Write_String
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text0
   361   000222                     __ptext0:
   362                           	callstack 0
   363   000222                     _main:
   364                           	callstack 29
   365   000222                     
   366                           ;main.c: 39:     OSCCONbits.IRCF = 0b111;
   367   000222  0E70               	movlw	112
   368   000224  12D3               	iorwf	211,f,c	;volatile
   369   000226                     
   370                           ;main.c: 40:     UART_Init(9600);
   371   000226  0E80               	movlw	128
   372   000228  6E01               	movwf	UART_Init@baud_rate^0,c
   373   00022A  0E25               	movlw	37
   374   00022C  6E02               	movwf	(UART_Init@baud_rate+1)^0,c
   375   00022E  0E00               	movlw	0
   376   000230  6E03               	movwf	(UART_Init@baud_rate+2)^0,c
   377   000232  0E00               	movlw	0
   378   000234  6E04               	movwf	(UART_Init@baud_rate+3)^0,c
   379   000236  EC65  F001         	call	_UART_Init	;wreg free
   380   00023A                     
   381                           ;main.c: 42:     UART_Write_String("UART Initialized\r\n");
   382   00023A  0E01               	movlw	low STR_1
   383   00023C  6E02               	movwf	UART_Write_String@text^0,c
   384   00023E  EC3B  F001         	call	_UART_Write_String	;wreg free
   385   000242                     l798:
   386                           
   387                           ;main.c: 45:     {;main.c: 46:         char received_char = UART_Read();
   388   000242  EC5C  F001         	call	_UART_Read	;wreg free
   389   000246  6E05               	movwf	main@received_char^0,c
   390   000248                     
   391                           ;main.c: 47:         if (received_char != 0)
   392   000248  5005               	movf	main@received_char^0,w,c
   393   00024A  B4D8               	btfsc	status,2,c
   394   00024C  EF2A  F001         	goto	u61
   395   000250  EF2C  F001         	goto	u60
   396   000254                     u61:
   397   000254  EF21  F001         	goto	l798
   398   000258                     u60:
   399   000258                     
   400                           ;main.c: 48:         {;main.c: 49:              UART_Write_String("received :  ");
   401   000258  0E14               	movlw	low STR_2
   402   00025A  6E02               	movwf	UART_Write_String@text^0,c
   403   00025C  EC3B  F001         	call	_UART_Write_String	;wreg free
   404   000260                     
   405                           ;main.c: 50:              UART_Write(received_char);
   406   000260  5005               	movf	main@received_char^0,w,c
   407   000262  EC51  F001         	call	_UART_Write
   408   000266                     
   409                           ;main.c: 51:              UART_Write_String("\r\n");
   410   000266  0E11               	movlw	low (STR_1+16)
   411   000268  6E02               	movwf	UART_Write_String@text^0,c
   412   00026A  EC3B  F001         	call	_UART_Write_String	;wreg free
   413   00026E  EF21  F001         	goto	l798
   414   000272  EF00  F000         	goto	start
   415   000276                     __end_of_main:
   416                           	callstack 0
   417                           
   418 ;; *************** function _UART_Write_String *****************
   419 ;; Defined at:
   420 ;;		line 23 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;  text            1    1[COMRAM] PTR const unsigned char 
   423 ;;		 -> STR_3(3), STR_2(13), STR_1(19), 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1
   435 ;;      Params:         1       0       0
   436 ;;      Locals:         0       0       0
   437 ;;      Temps:          0       0       0
   438 ;;      Totals:         1       0       0
   439 ;;Total ram usage:        1 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 1
   442 ;; This function calls:
   443 ;;		_UART_Write
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text1
   450   000276                     __ptext1:
   451                           	callstack 0
   452   000276                     _UART_Write_String:
   453                           	callstack 29
   454   000276                     
   455                           ;main.c: 23: void UART_Write_String(const char *text);main.c: 24: {;main.c: 25:     whil
      +                          e (*text) {
   456   000276  EF44  F001         	goto	l790
   457   00027A                     l786:
   458                           
   459                           ;main.c: 26:         UART_Write(*text++);
   460   00027A  C002  FFF6         	movff	UART_Write_String@text,tblptrl
   461   00027E                     	if	0	;There is only one active tblptr byte
   462   00027E                     	endif
   463   00027E                     	if	0	;tblptru may be non-zero
   464   00027E                     	endif
   465   00027E                     	if	0	;tblptru may be non-zero
   466   00027E                     	endif
   467   00027E  0008               	tblrd		*
   468   000280  50F5               	movf	tablat,w,c
   469   000282  EC51  F001         	call	_UART_Write
   470   000286  2A02               	incf	UART_Write_String@text^0,f,c
   471   000288                     l790:
   472                           
   473                           ;main.c: 25:     while (*text) {
   474   000288  C002  FFF6         	movff	UART_Write_String@text,tblptrl
   475   00028C                     	if	0	;There is only one active tblptr byte
   476   00028C                     	endif
   477   00028C                     	if	0	;tblptru may be non-zero
   478   00028C                     	endif
   479   00028C                     	if	0	;tblptru may be non-zero
   480   00028C                     	endif
   481   00028C  0008               	tblrd		*
   482   00028E  50F5               	movf	tablat,w,c
   483   000290  0900               	iorlw	0
   484   000292  A4D8               	btfss	status,2,c
   485   000294  EF4E  F001         	goto	u51
   486   000298  EF50  F001         	goto	u50
   487   00029C                     u51:
   488   00029C  EF3D  F001         	goto	l786
   489   0002A0                     u50:
   490   0002A0  0012               	return		;funcret
   491   0002A2                     __end_of_UART_Write_String:
   492                           	callstack 0
   493                           
   494 ;; *************** function _UART_Write *****************
   495 ;; Defined at:
   496 ;;		line 17 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  data            1    wreg     unsigned char 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  data            1    0[COMRAM] unsigned char 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1
   510 ;;      Params:         0       0       0
   511 ;;      Locals:         1       0       0
   512 ;;      Temps:          0       0       0
   513 ;;      Totals:         1       0       0
   514 ;;Total ram usage:        1 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_UART_Write_String
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text2
   525   0002A2                     __ptext2:
   526                           	callstack 0
   527   0002A2                     _UART_Write:
   528                           	callstack 29
   529                           
   530                           ;incstack = 0
   531                           ;UART_Write@data stored from wreg
   532   0002A2  6E01               	movwf	UART_Write@data^0,c
   533   0002A4                     l22:
   534   0002A4  A2AC               	btfss	172,1,c	;volatile
   535   0002A6  EF57  F001         	goto	u11
   536   0002AA  EF59  F001         	goto	u10
   537   0002AE                     u11:
   538   0002AE  EF52  F001         	goto	l22
   539   0002B2                     u10:
   540   0002B2                     
   541                           ;main.c: 20:     TXREG = data;
   542   0002B2  C001  FFAD         	movff	UART_Write@data,4013	;volatile
   543   0002B6  0012               	return		;funcret
   544   0002B8                     __end_of_UART_Write:
   545                           	callstack 0
   546                           
   547 ;; *************** function _UART_Read *****************
   548 ;; Defined at:
   549 ;;		line 30 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      unsigned char 
   556 ;; Registers used:
   557 ;;		wreg, status,2
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1
   563 ;;      Params:         0       0       0
   564 ;;      Locals:         0       0       0
   565 ;;      Temps:          0       0       0
   566 ;;      Totals:         0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text3
   577   0002B8                     __ptext3:
   578                           	callstack 0
   579   0002B8                     _UART_Read:
   580                           	callstack 30
   581   0002B8                     l34:
   582   0002B8  AA9E               	btfss	158,5,c	;volatile
   583   0002BA  EF61  F001         	goto	u31
   584   0002BE  EF63  F001         	goto	u30
   585   0002C2                     u31:
   586   0002C2  EF5C  F001         	goto	l34
   587   0002C6                     u30:
   588   0002C6                     
   589                           ;main.c: 33:     return RCREG;
   590   0002C6  50AE               	movf	174,w,c	;volatile
   591   0002C8  0012               	return		;funcret
   592   0002CA                     __end_of_UART_Read:
   593                           	callstack 0
   594                           
   595 ;; *************** function _UART_Init *****************
   596 ;; Defined at:
   597 ;;		line 4 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  baud_rate       4    0[COMRAM] unsigned long 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1
   611 ;;      Params:         4       0       0
   612 ;;      Locals:         0       0       0
   613 ;;      Temps:          0       0       0
   614 ;;      Totals:         4       0       0
   615 ;;Total ram usage:        4 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text4
   625   0002CA                     __ptext4:
   626                           	callstack 0
   627   0002CA                     _UART_Init:
   628                           	callstack 30
   629   0002CA                     
   630                           ;main.c: 4: void UART_Init(unsigned long baud_rate);main.c: 5: {;main.c: 6:     SPBRG = 
      +                          12;
   631   0002CA  0E0C               	movlw	12
   632   0002CC  6EAF               	movwf	175,c	;volatile
   633   0002CE                     
   634                           ;main.c: 7:     TXSTAbits.BRGH = 0;
   635   0002CE  94AC               	bcf	172,2,c	;volatile
   636   0002D0                     
   637                           ;main.c: 9:     TRISCbits.TRISC6 = 0;
   638   0002D0  9C94               	bcf	148,6,c	;volatile
   639   0002D2                     
   640                           ;main.c: 10:     TRISCbits.TRISC7 = 1;
   641   0002D2  8E94               	bsf	148,7,c	;volatile
   642   0002D4                     
   643                           ;main.c: 12:     RCSTAbits.SPEN = 1;
   644   0002D4  8EAB               	bsf	171,7,c	;volatile
   645   0002D6                     
   646                           ;main.c: 13:     TXSTAbits.TXEN = 1;
   647   0002D6  8AAC               	bsf	172,5,c	;volatile
   648   0002D8                     
   649                           ;main.c: 14:     RCSTAbits.CREN = 1;
   650   0002D8  88AB               	bsf	171,4,c	;volatile
   651   0002DA  0012               	return		;funcret
   652   0002DC                     __end_of_UART_Init:
   653                           	callstack 0
   654                           
   655                           	psect	rparam
   656   000001                     ___rparam_used  equ	1
   657   000000                     ___param_bank   equ	0
   658   000000                     __Lparam        equ	__Lrparam
   659   000000                     __Hparam        equ	__Hrparam
   660                           
   661                           	psect	config
   662                           
   663                           ; Padding undefined space
   664   300000                     	org	3145728
   665   300000  FF                 	db	255
   666                           
   667                           ;Config register CONFIG1H @ 0x300001
   668                           ;	Oscillator
   669                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
   670                           ;	Fail-Safe Clock Monitor Enable bit
   671                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   672                           ;	Internal/External Oscillator Switchover bit
   673                           ;	IESO = OFF, Oscillator Switchover mode disabled
   674   300001                     	org	3145729
   675   300001  08                 	db	8
   676                           
   677                           ;Config register CONFIG2L @ 0x300002
   678                           ;	Power-up Timer Enable bit
   679                           ;	PWRT = OFF, PWRT disabled
   680                           ;	Brown-out Reset Enable bits
   681                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   682                           ;	Brown-out Reset Voltage bits
   683                           ;	BORV = 3, Minimum Setting
   684   300002                     	org	3145730
   685   300002  19                 	db	25
   686                           
   687                           ;Config register CONFIG2H @ 0x300003
   688                           ;	Watchdog Timer Enable bit
   689                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   690                           ;	Watchdog Timer Postscale Select bits
   691                           ;	WDTPS = 32768, 1:32768
   692   300003                     	org	3145731
   693   300003  1E                 	db	30
   694                           
   695                           ; Padding undefined space
   696   300004                     	org	3145732
   697   300004  FF                 	db	255
   698                           
   699                           ;Config register CONFIG3H @ 0x300005
   700                           ;	CCP2 MUX bit
   701                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   702                           ;	PORTB A/D Enable bit
   703                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
   704                           ;	Low-Power Timer1 Oscillator Enable bit
   705                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   706                           ;	MCLR Pin Enable bit
   707                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   708   300005                     	org	3145733
   709   300005  83                 	db	131
   710                           
   711                           ;Config register CONFIG4L @ 0x300006
   712                           ;	Stack Full/Underflow Reset Enable bit
   713                           ;	STVREN = ON, Stack full/underflow will cause Reset
   714                           ;	Single-Supply ICSP Enable bit
   715                           ;	LVP = ON, Single-Supply ICSP enabled
   716                           ;	Boot Block Size Select bits
   717                           ;	BBSIZ = BB256, 256 Word
   718                           ;	Extended Instruction Set Enable bit
   719                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   720                           ;	Background Debugger Enable bit
   721                           ;	DEBUG = 0x1, unprogrammed default
   722   300006                     	org	3145734
   723   300006  85                 	db	133
   724                           
   725                           ; Padding undefined space
   726   300007                     	org	3145735
   727   300007  FF                 	db	255
   728                           
   729                           ;Config register CONFIG5L @ 0x300008
   730                           ;	Code Protection bit
   731                           ;	CP0 = OFF, Block 0 not code-protected
   732                           ;	Code Protection bit
   733                           ;	CP1 = OFF, Block 1 not code-protected
   734   300008                     	org	3145736
   735   300008  03                 	db	3
   736                           
   737                           ;Config register CONFIG5H @ 0x300009
   738                           ;	Boot Block Code Protection bitProtect Boot
   739                           ;	CPB = OFF, Boot block not code-protected
   740                           ;	Data EEPROM Code Protection bit
   741                           ;	CPD = OFF, Data EEPROM not code-protected
   742   300009                     	org	3145737
   743   300009  C0                 	db	192
   744                           
   745                           ;Config register CONFIG6L @ 0x30000A
   746                           ;	Write Protection bit
   747                           ;	WRT0 = OFF, Block 0 not write-protected
   748                           ;	Write Protection bit
   749                           ;	WRT1 = OFF, Block 1 not write-protected
   750   30000A                     	org	3145738
   751   30000A  03                 	db	3
   752                           
   753                           ;Config register CONFIG6H @ 0x30000B
   754                           ;	Configuration Register Write Protection bit
   755                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   756                           ;	Boot Block Write Protection bit
   757                           ;	WRTB = OFF, Boot block not write-protected
   758                           ;	Data EEPROM Write Protection bit
   759                           ;	WRTD = OFF, Data EEPROM not write-protected
   760   30000B                     	org	3145739
   761   30000B  E0                 	db	224
   762                           
   763                           ;Config register CONFIG7L @ 0x30000C
   764                           ;	Table Read Protection bit
   765                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
   766                           ;	Table Read Protection bit
   767                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
   768   30000C                     	org	3145740
   769   30000C  03                 	db	3
   770                           
   771                           ;Config register CONFIG7H @ 0x30000D
   772                           ;	Boot Block Table Read Protection bit
   773                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
   774   30000D                     	org	3145741
   775   30000D  40                 	db	64
   776                           tosu	equ	0xFFF
   777                           tosh	equ	0xFFE
   778                           tosl	equ	0xFFD
   779                           stkptr	equ	0xFFC
   780                           pclatu	equ	0xFFB
   781                           pclath	equ	0xFFA
   782                           pcl	equ	0xFF9
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           prodh	equ	0xFF4
   788                           prodl	equ	0xFF3
   789                           indf0	equ	0xFEF
   790                           postinc0	equ	0xFEE
   791                           postdec0	equ	0xFED
   792                           preinc0	equ	0xFEC
   793                           plusw0	equ	0xFEB
   794                           fsr0h	equ	0xFEA
   795                           fsr0l	equ	0xFE9
   796                           wreg	equ	0xFE8
   797                           indf1	equ	0xFE7
   798                           postinc1	equ	0xFE6
   799                           postdec1	equ	0xFE5
   800                           preinc1	equ	0xFE4
   801                           plusw1	equ	0xFE3
   802                           fsr1h	equ	0xFE2
   803                           fsr1l	equ	0xFE1
   804                           bsr	equ	0xFE0
   805                           indf2	equ	0xFDF
   806                           postinc2	equ	0xFDE
   807                           postdec2	equ	0xFDD
   808                           preinc2	equ	0xFDC
   809                           plusw2	equ	0xFDB
   810                           fsr2h	equ	0xFDA
   811                           fsr2l	equ	0xFD9
   812                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      5       5
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    UART_Write_String@text	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), STR_2(CODE[13]), STR_3(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     124
                                              4 COMRAM     1     1      0
                          _UART_Init
                          _UART_Read
                         _UART_Write
                  _UART_Write_String
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    1     0      1      63
                                              1 COMRAM     1     0      1
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4       1
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_Read
   _UART_Write
   _UART_Write_String
     _UART_Write

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          127      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllh        22      0       0      0.0%
BITBIGSFRlll        20      0       0      0.0%
BITBIGSFRlh          1      0       0      0.0%
COMRAM             127      5       5      3.9%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BIGRAM             511      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       5      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Jan 04 13:19:41 2025

                       l22 02A4                         l31 02A0                         l25 02B6  
                       l34 02B8                         l19 02DA                         l37 02C8  
                       u10 02B2                         u11 02AE                         u30 02C6  
                       u31 02C2                         u50 02A0                         u51 029C  
                       u60 0258                         u61 0254                        l800 0248  
                      l722 02A4                        l802 0258                        l724 02B2  
                      l804 0260                        l750 02C6                        l806 0266  
                      l770 02CA                        l780 02D6                        l772 02CE  
                      l748 02B8                        l782 02D8                        l774 02D0  
                      l790 0288                        l776 02D2                        l784 0276  
                      l792 0222                        l778 02D4                        l786 027A  
                      l794 0226                        l788 0286                        l796 023A  
                      l798 0242                       STR_1 0201                       STR_2 0214  
                     STR_3 0211                       _main 0222                       start 0000  
             ___param_bank 0000                      ?_main 0001                      _RCREG 0FAE  
                    _SPBRG 0FAF                      _TXREG 0FAD                ?_UART_Write 0001  
                    tablat 0FF5                      status 0FD8            __initialization 02DC  
             __end_of_main 0276                     ??_main 0005              __activetblptr 0001  
        main@received_char 0005          __end_of_UART_Init 02DC          __end_of_UART_Read 02CA  
                   isa$std 0001               __mediumconst 0000                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8                 __accesstop 0080  
  __end_of__initialization 02DC              ___rparam_used 0001             __pcstackCOMRAM 0001  
             ??_UART_Write 0001                    __Hparam 0000                    __Lparam 0000  
       __end_of_UART_Write 02B8               __psmallconst 0200                    __pcinit 02DC  
                  __ramtop 0200                    __ptext0 0222                    __ptext1 0276  
                  __ptext2 02A2                    __ptext3 02B8                    __ptext4 02CA  
     end_of_initialization 02DC                  _RCSTAbits 0FAB                  _UART_Init 02CA  
                _UART_Read 02B8             UART_Write@data 0001         UART_Init@baud_rate 0001  
                _TRISCbits 0F94      UART_Write_String@text 0002                  _TXSTAbits 0FAC  
               ?_UART_Init 0001                 ?_UART_Read 0001        start_initialization 02DC  
              ??_UART_Init 0005                ??_UART_Read 0001                __smallconst 0200  
                 _PIR1bits 0F9E                   __Hrparam 0000                   __Lrparam 0000  
             __Lsmallconst 0200          _UART_Write_String 0276         ?_UART_Write_String 0002  
      ??_UART_Write_String 0003                   isa$xinst 0000  __end_of_UART_Write_String 02A2  
               _OSCCONbits 0FD3                 _UART_Write 02A2  
