

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Jan 03 20:52:01 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	intcodelo,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 23/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4321 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000000                     nvmcon          equ	0
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000F80                     PORTA           equ	3968	;# 
    93   000F81                     PORTB           equ	3969	;# 
    94   000F82                     PORTC           equ	3970	;# 
    95   000F83                     PORTD           equ	3971	;# 
    96   000F84                     PORTE           equ	3972	;# 
    97   000F89                     LATA            equ	3977	;# 
    98   000F8A                     LATB            equ	3978	;# 
    99   000F8B                     LATC            equ	3979	;# 
   100   000F8C                     LATD            equ	3980	;# 
   101   000F8D                     LATE            equ	3981	;# 
   102   000F92                     TRISA           equ	3986	;# 
   103   000F92                     DDRA            equ	3986	;# 
   104   000F93                     TRISB           equ	3987	;# 
   105   000F93                     DDRB            equ	3987	;# 
   106   000F94                     TRISC           equ	3988	;# 
   107   000F94                     DDRC            equ	3988	;# 
   108   000F95                     TRISD           equ	3989	;# 
   109   000F95                     DDRD            equ	3989	;# 
   110   000F96                     TRISE           equ	3990	;# 
   111   000F96                     DDRE            equ	3990	;# 
   112   000F9B                     OSCTUNE         equ	3995	;# 
   113   000F9D                     PIE1            equ	3997	;# 
   114   000F9E                     PIR1            equ	3998	;# 
   115   000F9F                     IPR1            equ	3999	;# 
   116   000FA0                     PIE2            equ	4000	;# 
   117   000FA1                     PIR2            equ	4001	;# 
   118   000FA2                     IPR2            equ	4002	;# 
   119   000FA6                     EECON1          equ	4006	;# 
   120   000FA7                     EECON2          equ	4007	;# 
   121   000FA8                     EEDATA          equ	4008	;# 
   122   000FA9                     EEADR           equ	4009	;# 
   123   000FAB                     RCSTA           equ	4011	;# 
   124   000FAB                     RCSTA1          equ	4011	;# 
   125   000FAC                     TXSTA           equ	4012	;# 
   126   000FAC                     TXSTA1          equ	4012	;# 
   127   000FAD                     TXREG           equ	4013	;# 
   128   000FAD                     TXREG1          equ	4013	;# 
   129   000FAE                     RCREG           equ	4014	;# 
   130   000FAE                     RCREG1          equ	4014	;# 
   131   000FAF                     SPBRG           equ	4015	;# 
   132   000FAF                     SPBRG1          equ	4015	;# 
   133   000FB0                     SPBRGH          equ	4016	;# 
   134   000FB1                     T3CON           equ	4017	;# 
   135   000FB2                     TMR3            equ	4018	;# 
   136   000FB2                     TMR3L           equ	4018	;# 
   137   000FB3                     TMR3H           equ	4019	;# 
   138   000FB4                     CMCON           equ	4020	;# 
   139   000FB5                     CVRCON          equ	4021	;# 
   140   000FB6                     ECCP1AS         equ	4022	;# 
   141   000FB7                     ECCP1DEL        equ	4023	;# 
   142   000FB7                     PWM1CON         equ	4023	;# 
   143   000FB8                     BAUDCON         equ	4024	;# 
   144   000FB8                     BAUDCTL         equ	4024	;# 
   145   000FBA                     CCP2CON         equ	4026	;# 
   146   000FBB                     CCPR2           equ	4027	;# 
   147   000FBB                     CCPR2L          equ	4027	;# 
   148   000FBC                     CCPR2H          equ	4028	;# 
   149   000FBD                     CCP1CON         equ	4029	;# 
   150   000FBD                     ECCP1CON        equ	4029	;# 
   151   000FBE                     CCPR1           equ	4030	;# 
   152   000FBE                     CCPR1L          equ	4030	;# 
   153   000FBF                     CCPR1H          equ	4031	;# 
   154   000FC0                     ADCON2          equ	4032	;# 
   155   000FC1                     ADCON1          equ	4033	;# 
   156   000FC2                     ADCON0          equ	4034	;# 
   157   000FC3                     ADRES           equ	4035	;# 
   158   000FC3                     ADRESL          equ	4035	;# 
   159   000FC4                     ADRESH          equ	4036	;# 
   160   000FC5                     SSPCON2         equ	4037	;# 
   161   000FC6                     SSPCON1         equ	4038	;# 
   162   000FC7                     SSPSTAT         equ	4039	;# 
   163   000FC8                     SSPADD          equ	4040	;# 
   164   000FC9                     SSPBUF          equ	4041	;# 
   165   000FCA                     T2CON           equ	4042	;# 
   166   000FCB                     PR2             equ	4043	;# 
   167   000FCB                     MEMCON          equ	4043	;# 
   168   000FCC                     TMR2            equ	4044	;# 
   169   000FCD                     T1CON           equ	4045	;# 
   170   000FCE                     TMR1            equ	4046	;# 
   171   000FCE                     TMR1L           equ	4046	;# 
   172   000FCF                     TMR1H           equ	4047	;# 
   173   000FD0                     RCON            equ	4048	;# 
   174   000FD1                     WDTCON          equ	4049	;# 
   175   000FD2                     HLVDCON         equ	4050	;# 
   176   000FD2                     LVDCON          equ	4050	;# 
   177   000FD3                     OSCCON          equ	4051	;# 
   178   000FD5                     T0CON           equ	4053	;# 
   179   000FD6                     TMR0            equ	4054	;# 
   180   000FD6                     TMR0L           equ	4054	;# 
   181   000FD7                     TMR0H           equ	4055	;# 
   182   000FD8                     STATUS          equ	4056	;# 
   183   000FD9                     FSR2            equ	4057	;# 
   184   000FD9                     FSR2L           equ	4057	;# 
   185   000FDA                     FSR2H           equ	4058	;# 
   186   000FDB                     PLUSW2          equ	4059	;# 
   187   000FDC                     PREINC2         equ	4060	;# 
   188   000FDD                     POSTDEC2        equ	4061	;# 
   189   000FDE                     POSTINC2        equ	4062	;# 
   190   000FDF                     INDF2           equ	4063	;# 
   191   000FE0                     BSR             equ	4064	;# 
   192   000FE1                     FSR1            equ	4065	;# 
   193   000FE1                     FSR1L           equ	4065	;# 
   194   000FE2                     FSR1H           equ	4066	;# 
   195   000FE3                     PLUSW1          equ	4067	;# 
   196   000FE4                     PREINC1         equ	4068	;# 
   197   000FE5                     POSTDEC1        equ	4069	;# 
   198   000FE6                     POSTINC1        equ	4070	;# 
   199   000FE7                     INDF1           equ	4071	;# 
   200   000FE8                     WREG            equ	4072	;# 
   201   000FE9                     FSR0            equ	4073	;# 
   202   000FE9                     FSR0L           equ	4073	;# 
   203   000FEA                     FSR0H           equ	4074	;# 
   204   000FEB                     PLUSW0          equ	4075	;# 
   205   000FEC                     PREINC0         equ	4076	;# 
   206   000FED                     POSTDEC0        equ	4077	;# 
   207   000FEE                     POSTINC0        equ	4078	;# 
   208   000FEF                     INDF0           equ	4079	;# 
   209   000FF0                     INTCON3         equ	4080	;# 
   210   000FF1                     INTCON2         equ	4081	;# 
   211   000FF2                     INTCON          equ	4082	;# 
   212   000FF3                     PROD            equ	4083	;# 
   213   000FF3                     PRODL           equ	4083	;# 
   214   000FF4                     PRODH           equ	4084	;# 
   215   000FF5                     TABLAT          equ	4085	;# 
   216   000FF6                     TBLPTR          equ	4086	;# 
   217   000FF6                     TBLPTRL         equ	4086	;# 
   218   000FF7                     TBLPTRH         equ	4087	;# 
   219   000FF8                     TBLPTRU         equ	4088	;# 
   220   000FF9                     PCLAT           equ	4089	;# 
   221   000FF9                     PC              equ	4089	;# 
   222   000FF9                     PCL             equ	4089	;# 
   223   000FFA                     PCLATH          equ	4090	;# 
   224   000FFB                     PCLATU          equ	4091	;# 
   225   000FFC                     STKPTR          equ	4092	;# 
   226   000FFD                     TOS             equ	4093	;# 
   227   000FFD                     TOSL            equ	4093	;# 
   228   000FFE                     TOSH            equ	4094	;# 
   229   000FFF                     TOSU            equ	4095	;# 
   230   000F82                     _PORTCbits      set	3970
   231   000F83                     _PORTD          set	3971
   232   000FF1                     _INTCON2bits    set	4081
   233   000FF0                     _INTCON3bits    set	4080
   234   000FF2                     _INTCONbits     set	4082
   235   000F94                     _TRISC          set	3988
   236   000F95                     _TRISD          set	3989
   237   000F93                     _TRISB          set	3987
   238   000FD0                     _RCONbits       set	4048
   239   000FC1                     _ADCON1         set	4033
   240                           
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244   000290                     __pcinit:
   245                           	callstack 0
   246   000290                     start_initialization:
   247                           	callstack 0
   248   000290                     __initialization:
   249                           	callstack 0
   250   000290                     end_of_initialization:
   251                           	callstack 0
   252   000290                     __end_of__initialization:
   253                           	callstack 0
   254   000290  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255   000292  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256   000294  0100               	movlb	0
   257   000296  EF01  F001         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	cstackCOMRAM
   260   000001                     __pcstackCOMRAM:
   261                           	callstack 0
   262   000001                     ??_toggle:
   263                           
   264                           ; 1 bytes @ 0x0
   265   000001                     	ds	1
   266   000002                     ??_counting:
   267                           
   268                           ; 1 bytes @ 0x1
   269   000002                     	ds	4
   270   000006                     counting@i:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x5
   274   000006                     	ds	1
   275   000007                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x6
   278   000007                     	ds	1
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 15 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1
   299 ;;      Params:         0       0       0
   300 ;;      Locals:         0       0       0
   301 ;;      Temps:          1       0       0
   302 ;;      Totals:         1       0       0
   303 ;;Total ram usage:        1 bytes
   304 ;; Hardware stack levels required when called: 2
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           	psect	text0
   313   000202                     __ptext0:
   314                           	callstack 0
   315   000202                     _main:
   316                           	callstack 29
   317   000202                     
   318                           ;main.c: 17:     ADCON1 = 0x0f;
   319   000202  0E0F               	movlw	15
   320   000204  6EC1               	movwf	193,c	;volatile
   321   000206                     
   322                           ;main.c: 19:     RCONbits.IPEN = 1;
   323   000206  8ED0               	bsf	208,7,c	;volatile
   324   000208                     
   325                           ;main.c: 21:     TRISB = 0xff;
   326   000208  6893               	setf	147,c	;volatile
   327   00020A                     
   328                           ;main.c: 22:     TRISD = 0x00;
   329   00020A  6A95               	clrf	149,c	;volatile
   330                           
   331                           ;main.c: 23:     TRISC = 0xFD;
   332   00020C  0EFD               	movlw	253
   333   00020E  6E94               	movwf	148,c	;volatile
   334   000210                     
   335                           ;main.c: 25:     INTCONbits.INT0IE = 1;
   336   000210  88F2               	bsf	242,4,c	;volatile
   337   000212                     
   338                           ;main.c: 26:     INTCONbits.INT0IF = 0;
   339   000212  92F2               	bcf	242,1,c	;volatile
   340   000214                     
   341                           ;main.c: 28:     INTCON3bits.INT1IE = 1;
   342   000214  86F0               	bsf	240,3,c	;volatile
   343   000216                     
   344                           ;main.c: 29:     INTCON3bits.INT1IF = 0;
   345   000216  90F0               	bcf	240,0,c	;volatile
   346   000218                     
   347                           ;main.c: 30:     INTCON3bits.INT1IP = 0;
   348   000218  9CF0               	bcf	240,6,c	;volatile
   349   00021A                     
   350                           ;main.c: 32:     INTCONbits.GIEH = 1;
   351   00021A  8EF2               	bsf	242,7,c	;volatile
   352   00021C                     
   353                           ;main.c: 33:     INTCONbits.GIEL = 1;
   354   00021C  8CF2               	bsf	242,6,c	;volatile
   355   00021E                     
   356                           ;main.c: 35:     INTCON2bits.INTEDG0 = 1;
   357   00021E  8CF1               	bsf	241,6,c	;volatile
   358   000220                     
   359                           ;main.c: 36:     INTCON2bits.INTEDG1 = 1;
   360   000220  8AF1               	bsf	241,5,c	;volatile
   361   000222                     l27:
   362                           
   363                           ;main.c: 41:         PORTD = 0x0F;
   364   000222  0E0F               	movlw	15
   365   000224  6E83               	movwf	131,c	;volatile
   366   000226                     
   367                           ;main.c: 42:         _delay((unsigned long)((300)*(1000000/4000.0)));
   368   000226  0E62               	movlw	98
   369   000228  6E07               	movwf	??_main^0,c
   370   00022A  0E66               	movlw	102
   371   00022C                     u97:
   372   00022C  2EE8               	decfsz	wreg,f,c
   373   00022E  D7FE               	bra	u97
   374   000230  2E07               	decfsz	??_main^0,f,c
   375   000232  D7FC               	bra	u97
   376   000234                     
   377                           ;main.c: 43:         PORTD = 0x00;
   378   000234  6A83               	clrf	131,c	;volatile
   379   000236                     
   380                           ;main.c: 44:         _delay((unsigned long)((300)*(1000000/4000.0)));
   381   000236  0E62               	movlw	98
   382   000238  6E07               	movwf	??_main^0,c
   383   00023A  0E66               	movlw	102
   384   00023C                     u107:
   385   00023C  2EE8               	decfsz	wreg,f,c
   386   00023E  D7FE               	bra	u107
   387   000240  2E07               	decfsz	??_main^0,f,c
   388   000242  D7FC               	bra	u107
   389   000244  EF11  F001         	goto	l27
   390   000248  EF57  F000         	goto	start
   391   00024C                     __end_of_main:
   392                           	callstack 0
   393                           
   394 ;; *************** function _counting *****************
   395 ;; Defined at:
   396 ;;		line 59 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;  i               1    5[COMRAM] unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1
   410 ;;      Params:         0       0       0
   411 ;;      Locals:         1       0       0
   412 ;;      Temps:          4       0       0
   413 ;;      Totals:         5       0       0
   414 ;;Total ram usage:        5 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		Interrupt level 1
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           	psect	intcodelo
   425   000018                     __pintcodelo:
   426                           	callstack 0
   427   000018                     _counting:
   428                           	callstack 29
   429                           
   430                           ;incstack = 0
   431   000018  8008               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   432   00001A  CFD8 F003          	movff	status,??_counting+1
   433   00001E  CFE8 F004          	movff	wreg,??_counting+2
   434   000022  CFE0 F005          	movff	bsr,??_counting+3
   435   000026                     
   436                           ;main.c: 62:     if (INTCON3bits.INT1IF && INTCON3bits.INT1IE)
   437   000026  A0F0               	btfss	240,0,c	;volatile
   438   000028  EF18  F000         	goto	i1u4_21
   439   00002C  EF1A  F000         	goto	i1u4_20
   440   000030                     i1u4_21:
   441   000030  EF4F  F000         	goto	i1l45
   442   000034                     i1u4_20:
   443   000034  A6F0               	btfss	240,3,c	;volatile
   444   000036  EF1F  F000         	goto	i1u5_21
   445   00003A  EF21  F000         	goto	i1u5_20
   446   00003E                     i1u5_21:
   447   00003E  EF4F  F000         	goto	i1l45
   448   000042                     i1u5_20:
   449   000042                     
   450                           ;main.c: 63:     {;main.c: 64:         INTCON3bits.INT1IF = 0;
   451   000042  90F0               	bcf	240,0,c	;volatile
   452   000044                     
   453                           ;main.c: 65:         PORTCbits.RC1 = ~PORTCbits.RC1;
   454   000044  B282               	btfsc	130,1,c	;volatile
   455   000046  EF27  F000         	goto	i1u6_21
   456   00004A  EF2A  F000         	goto	i1u6_20
   457   00004E                     i1u6_21:
   458   00004E  0E01               	movlw	1
   459   000050  EF2B  F000         	goto	i1u6_26
   460   000054                     i1u6_20:
   461   000054  0E00               	movlw	0
   462   000056                     i1u6_26:
   463   000056  0AFF               	xorlw	255
   464   000058  6E02               	movwf	??_counting^0,c
   465   00005A  4602               	rlncf	??_counting^0,f,c
   466   00005C  5082               	movf	130,w,c	;volatile
   467   00005E  1802               	xorwf	??_counting^0,w,c
   468   000060  0BFD               	andlw	-3
   469   000062  1802               	xorwf	??_counting^0,w,c
   470   000064  6E82               	movwf	130,c	;volatile
   471   000066                     
   472                           ;main.c: 66:         for (uint8_t i = 0; i < 255; i++)
   473   000066  6A06               	clrf	counting@i^0,c
   474   000068                     i1l42:
   475                           
   476                           ;main.c: 67:           {;main.c: 68:                if (PORTCbits.RC3 == 0 ) break;
   477   000068  B682               	btfsc	130,3,c	;volatile
   478   00006A  EF39  F000         	goto	i1u7_21
   479   00006E  EF3B  F000         	goto	i1u7_20
   480   000072                     i1u7_21:
   481   000072  EF3D  F000         	goto	i1l44
   482   000076                     i1u7_20:
   483   000076  EF4F  F000         	goto	i1l45
   484   00007A                     i1l44:
   485                           
   486                           ;main.c: 69:                 PORTD = i;
   487   00007A  C006  FF83         	movff	counting@i,3971	;volatile
   488   00007E                     
   489                           ;main.c: 70:                 _delay((unsigned long)((10)*(1000000/4000.0)));
   490   00007E  0E04               	movlw	4
   491   000080  6E02               	movwf	??_counting^0,c
   492   000082  0E3E               	movlw	62
   493   000084                     i1u11_27:
   494   000084  2EE8               	decfsz	wreg,f,c
   495   000086  D7FE               	bra	i1u11_27
   496   000088  2E02               	decfsz	??_counting^0,f,c
   497   00008A  D7FC               	bra	i1u11_27
   498   00008C                     
   499                           ;main.c: 71:           }
   500   00008C  2A06               	incf	counting@i^0,f,c
   501   00008E  2806               	incf	counting@i^0,w,c
   502   000090  A4D8               	btfss	status,2,c
   503   000092  EF4D  F000         	goto	i1u8_21
   504   000096  EF4F  F000         	goto	i1u8_20
   505   00009A                     i1u8_21:
   506   00009A  EF34  F000         	goto	i1l42
   507   00009E                     i1u8_20:
   508   00009E                     i1l45:
   509   00009E  C005  FFE0         	movff	??_counting+3,bsr
   510   0000A2  C004  FFE8         	movff	??_counting+2,wreg
   511   0000A6  C003  FFD8         	movff	??_counting+1,status
   512   0000AA  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   513   0000AC  0010               	retfie	
   514   0000AE                     __end_of_counting:
   515                           	callstack 0
   516                           
   517 ;; *************** function _toggle *****************
   518 ;; Defined at:
   519 ;;		line 50 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1
   533 ;;      Params:         0       0       0
   534 ;;      Locals:         0       0       0
   535 ;;      Temps:          1       0       0
   536 ;;      Totals:         1       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		Interrupt level 2
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	intcode
   547   000008                     __pintcode:
   548                           	callstack 0
   549   000008                     _toggle:
   550                           	callstack 29
   551                           
   552                           ;incstack = 0
   553   000008  8208               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   554   00000A  EF26  F001         	goto	int_func
   555                           
   556                           	psect	intcode_body
   557   00024C                     __pintcode_body:
   558                           	callstack 29
   559   00024C                     int_func:
   560                           	callstack 29
   561   00024C                     
   562                           ;main.c: 52:     if (INTCONbits.INT0IF && INTCONbits.INT0IE)
   563   00024C  A2F2               	btfss	242,1,c	;volatile
   564   00024E  EF2B  F001         	goto	i2u1_41
   565   000252  EF2D  F001         	goto	i2u1_40
   566   000256                     i2u1_41:
   567   000256  EF46  F001         	goto	i2l36
   568   00025A                     i2u1_40:
   569   00025A  A8F2               	btfss	242,4,c	;volatile
   570   00025C  EF32  F001         	goto	i2u2_41
   571   000260  EF34  F001         	goto	i2u2_40
   572   000264                     i2u2_41:
   573   000264  EF46  F001         	goto	i2l36
   574   000268                     i2u2_40:
   575   000268                     
   576                           ;main.c: 53:     {;main.c: 54:         INTCONbits.INT0IF = 0;
   577   000268  92F2               	bcf	242,1,c	;volatile
   578   00026A                     
   579                           ;main.c: 55:         PORTCbits.RC1 = ~PORTCbits.RC1;
   580   00026A  B282               	btfsc	130,1,c	;volatile
   581   00026C  EF3A  F001         	goto	i2u3_41
   582   000270  EF3D  F001         	goto	i2u3_40
   583   000274                     i2u3_41:
   584   000274  0E01               	movlw	1
   585   000276  EF3E  F001         	goto	i2u3_46
   586   00027A                     i2u3_40:
   587   00027A  0E00               	movlw	0
   588   00027C                     i2u3_46:
   589   00027C  0AFF               	xorlw	255
   590   00027E  6E01               	movwf	??_toggle^0,c
   591   000280  4601               	rlncf	??_toggle^0,f,c
   592   000282  5082               	movf	130,w,c	;volatile
   593   000284  1801               	xorwf	??_toggle^0,w,c
   594   000286  0BFD               	andlw	-3
   595   000288  1801               	xorwf	??_toggle^0,w,c
   596   00028A  6E82               	movwf	130,c	;volatile
   597   00028C                     i2l36:
   598   00028C  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   599   00028E  0011               	retfie		f
   600   000290                     __end_of_toggle:
   601                           	callstack 0
   602                           
   603                           	psect	smallconst
   604   000200                     __psmallconst:
   605                           	callstack 0
   606   000200  00                 	db	0
   607   000201  00                 	db	0	; dummy byte at the end
   608   000000                     __activetblptr  equ	0
   609                           
   610                           	psect	rparam
   611   000001                     ___rparam_used  equ	1
   612   000000                     ___param_bank   equ	0
   613   000000                     __Lparam        equ	__Lrparam
   614   000000                     __Hparam        equ	__Hrparam
   615                           
   616                           	psect	temp
   617   000008                     btemp:
   618                           	callstack 0
   619   000008                     	ds	1
   620   000008                     int$flags       set	btemp
   621   000009                     wtemp8          set	btemp+1
   622   000009                     ttemp5          set	btemp+1
   623   00000C                     ttemp6          set	btemp+4
   624   000010                     ttemp7          set	btemp+8
   625                           
   626                           	psect	config
   627                           
   628                           ; Padding undefined space
   629   300000                     	org	3145728
   630   300000  FF                 	db	255
   631                           
   632                           ;Config register CONFIG1H @ 0x300001
   633                           ;	Oscillator
   634                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
   635                           ;	Fail-Safe Clock Monitor Enable bit
   636                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   637                           ;	Internal/External Oscillator Switchover bit
   638                           ;	IESO = OFF, Oscillator Switchover mode disabled
   639   300001                     	org	3145729
   640   300001  08                 	db	8
   641                           
   642                           ;Config register CONFIG2L @ 0x300002
   643                           ;	Power-up Timer Enable bit
   644                           ;	PWRT = OFF, PWRT disabled
   645                           ;	Brown-out Reset Enable bits
   646                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   647                           ;	Brown-out Reset Voltage bits
   648                           ;	BORV = 3, Minimum Setting
   649   300002                     	org	3145730
   650   300002  19                 	db	25
   651                           
   652                           ;Config register CONFIG2H @ 0x300003
   653                           ;	Watchdog Timer Enable bit
   654                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   655                           ;	Watchdog Timer Postscale Select bits
   656                           ;	WDTPS = 32768, 1:32768
   657   300003                     	org	3145731
   658   300003  1E                 	db	30
   659                           
   660                           ; Padding undefined space
   661   300004                     	org	3145732
   662   300004  FF                 	db	255
   663                           
   664                           ;Config register CONFIG3H @ 0x300005
   665                           ;	CCP2 MUX bit
   666                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   667                           ;	PORTB A/D Enable bit
   668                           ;	PBADEN = ANA, PORTB<4:0> pins are configured as analog input channels on Reset
   669                           ;	Low-Power Timer1 Oscillator Enable bit
   670                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   671                           ;	MCLR Pin Enable bit
   672                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   673   300005                     	org	3145733
   674   300005  83                 	db	131
   675                           
   676                           ;Config register CONFIG4L @ 0x300006
   677                           ;	Stack Full/Underflow Reset Enable bit
   678                           ;	STVREN = ON, Stack full/underflow will cause Reset
   679                           ;	Single-Supply ICSP Enable bit
   680                           ;	LVP = ON, Single-Supply ICSP enabled
   681                           ;	Boot Block Size Select bits
   682                           ;	BBSIZ = BB256, 256 Word
   683                           ;	Extended Instruction Set Enable bit
   684                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   685                           ;	Background Debugger Enable bit
   686                           ;	DEBUG = 0x1, unprogrammed default
   687   300006                     	org	3145734
   688   300006  85                 	db	133
   689                           
   690                           ; Padding undefined space
   691   300007                     	org	3145735
   692   300007  FF                 	db	255
   693                           
   694                           ;Config register CONFIG5L @ 0x300008
   695                           ;	Code Protection bit
   696                           ;	CP0 = OFF, Block 0 not code-protected
   697                           ;	Code Protection bit
   698                           ;	CP1 = OFF, Block 1 not code-protected
   699   300008                     	org	3145736
   700   300008  03                 	db	3
   701                           
   702                           ;Config register CONFIG5H @ 0x300009
   703                           ;	Boot Block Code Protection bitProtect Boot
   704                           ;	CPB = OFF, Boot block not code-protected
   705                           ;	Data EEPROM Code Protection bit
   706                           ;	CPD = OFF, Data EEPROM not code-protected
   707   300009                     	org	3145737
   708   300009  C0                 	db	192
   709                           
   710                           ;Config register CONFIG6L @ 0x30000A
   711                           ;	Write Protection bit
   712                           ;	WRT0 = OFF, Block 0 not write-protected
   713                           ;	Write Protection bit
   714                           ;	WRT1 = OFF, Block 1 not write-protected
   715   30000A                     	org	3145738
   716   30000A  03                 	db	3
   717                           
   718                           ;Config register CONFIG6H @ 0x30000B
   719                           ;	Configuration Register Write Protection bit
   720                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   721                           ;	Boot Block Write Protection bit
   722                           ;	WRTB = OFF, Boot block not write-protected
   723                           ;	Data EEPROM Write Protection bit
   724                           ;	WRTD = OFF, Data EEPROM not write-protected
   725   30000B                     	org	3145739
   726   30000B  E0                 	db	224
   727                           
   728                           ;Config register CONFIG7L @ 0x30000C
   729                           ;	Table Read Protection bit
   730                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
   731                           ;	Table Read Protection bit
   732                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
   733   30000C                     	org	3145740
   734   30000C  03                 	db	3
   735                           
   736                           ;Config register CONFIG7H @ 0x30000D
   737                           ;	Boot Block Table Read Protection bit
   738                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
   739   30000D                     	org	3145741
   740   30000D  40                 	db	64
   741                           tosu	equ	0xFFF
   742                           tosh	equ	0xFFE
   743                           tosl	equ	0xFFD
   744                           stkptr	equ	0xFFC
   745                           pclatu	equ	0xFFB
   746                           pclath	equ	0xFFA
   747                           pcl	equ	0xFF9
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           prodh	equ	0xFF4
   753                           prodl	equ	0xFF3
   754                           indf0	equ	0xFEF
   755                           postinc0	equ	0xFEE
   756                           postdec0	equ	0xFED
   757                           preinc0	equ	0xFEC
   758                           plusw0	equ	0xFEB
   759                           fsr0h	equ	0xFEA
   760                           fsr0l	equ	0xFE9
   761                           wreg	equ	0xFE8
   762                           indf1	equ	0xFE7
   763                           postinc1	equ	0xFE6
   764                           postdec1	equ	0xFE5
   765                           preinc1	equ	0xFE4
   766                           plusw1	equ	0xFE3
   767                           fsr1h	equ	0xFE2
   768                           fsr1l	equ	0xFE1
   769                           bsr	equ	0xFE0
   770                           indf2	equ	0xFDF
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           preinc2	equ	0xFDC
   774                           plusw2	equ	0xFDB
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      7       7
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _counting in COMRAM

    None.

Critical Paths under _toggle in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _counting in BANK0

    None.

Critical Paths under _toggle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _counting in BANK1

    None.

Critical Paths under _toggle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _counting                                             5     5      0      45
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _toggle                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _counting (ROOT)

 _toggle (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          126      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBIGSFRllh        76      0       0      0.0%
BITBIGSFRlh         31      0       0      0.0%
BITBIGSFRh          15      0       0      0.0%
BITBIGSFRlll         2      0       0      0.0%
COMRAM             126      7       7      5.6%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BIGRAM             511      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Jan 03 20:52:01 2025

                     l27 0222                       u97 022C                       bsr 0FE0  
                    l721 0202                      l731 0212                      l723 0206  
                    l741 021C                      l733 0214                      l725 0208  
                    l751 0236                      l743 021E                      l735 0216  
                    l727 020A                      l745 0220                      l737 0218  
                    l729 0210                      l747 0226                      l739 021A  
                    l749 0234                      u107 023C                      wreg 0FE8  
                   i1l42 0068                     i1l44 007A                     i1l45 009E  
                   i2l36 028C                     _main 0202                     btemp 0008  
                   start 00AE             ___param_bank 0000                    ?_main 0001  
                  i1l761 0026                    i1l763 0034                    i1l765 0042  
                  i1l775 007E                    i1l767 0044                    i1l777 008C  
                  i1l769 0066                    i2l753 024C                    i2l755 025A  
                  i2l757 0268                    i2l759 026A                    _PORTD 0F83  
                  _TRISB 0F93                    _TRISC 0F94                    _TRISD 0F95  
                  ttemp5 0009                    ttemp6 000C                    ttemp7 0010  
                  status 0FD8                    wtemp8 0009          __initialization 0290  
           __end_of_main 024C                   ??_main 0007            __activetblptr 0000  
                 _ADCON1 0FC1                   i1u4_20 0034                   i1u4_21 0030  
                 i1u5_20 0042                   i1u5_21 003E                   i2u1_40 025A  
                 i2u1_41 0256                   i1u6_20 0054                   i1u6_21 004E  
                 i2u2_40 0268                   i2u2_41 0264                   i1u6_26 0056  
                 i1u7_20 0076                   i1u7_21 0072                   i2u3_40 027A  
                 i2u3_41 0274                   i1u8_20 009E                   i1u8_21 009A  
                 i2u3_46 027C         __end_of_counting 00AE                   isa$std 0001  
                 _toggle 0008             __mediumconst 0000               __accesstop 0080  
__end_of__initialization 0290            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?_toggle 0001                  i1u11_27 0084                ?_counting 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0200  
                __pcinit 0290                  __ramtop 0200                  __ptext0 0202  
         __pintcode_body 024C     end_of_initialization 0290               ??_counting 0002  
                int_func 024C                _PORTCbits 0F82           __end_of_toggle 0290  
    start_initialization 0290                 ??_toggle 0001                __pintcode 0008  
            __pintcodelo 0018              __smallconst 0200                 _RCONbits 0FD0  
            _INTCON2bits 0FF1              _INTCON3bits 0FF0                counting@i 0006  
               __Hrparam 0000                 __Lrparam 0000                 _counting 0018  
               isa$xinst 0000                 int$flags 0008               _INTCONbits 0FF2  
               intlevel1 0000                 intlevel2 0000  
